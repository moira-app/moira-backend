spring:
  #config:
   # import: optional:classpath:.env[.properties]

  application:
    name: server
  cloud:
    aws:
      credential:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_ACCESS_KEY}
      s3:
        bucket: ${AWS_S3_BUCKET}
      region:
        static: ${AWS_S3_REGION}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MY_SQL_END_POINT}:3306/${MY_SQL_DB_NAME}?useSSL=false&serverTimezone=Asia/Seoul
    username: ${MY_SQL_DB_USERNAME}
    password: ${MY_SQL_DB_PASSWORD}

  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: false
        default_batch_fetch_size: 1000
        jdbc:
          time_zone: Asia/Seoul
        hbm2ddl:
          halt_on_error: false
    hibernate:
      ddl-auto: update
    open-in-view: true

  mail :
    host : smtp.gmail.com
    port : 587
    username : ${SMTP_MAIL_USERNAME}
    password : ${SMTP_MAIL_PASSWORD}
    properties :
      mail :
        smtp :
          auth : true
          starttls :
            enable : true

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  mongodb:
    port: ${MONGO_DB_PORT}
    username:
    password:
    uri: mongodb+srv://${MONGO_USER_NAME}:${MONGO_PASSWORD}@${MONGO_USER_NAME}.qayje6x.mongodb.net/?retryWrites=true&w=majority&appName=${MONGO_USER_NAME}";
    database: ${MONGO_DB_NAME}

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_SECRET_KEY}
            authorization-grant-type: authorization_code
            scope:
              - email
              - gender
              - birthday
              - birthyear
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET_KEY}
            scope:
              - email
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_SECRET_KEY}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - account_email
              - gender
              - birthday
              - birthyear
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정

logging:
  level:
    p6spy: info


jwt:
  secret-key: ${JWT_SECRET_KEY}
  #expiration: ${JWT_EXPIRATION}
  issuer: ${JWT_ISSUER}
